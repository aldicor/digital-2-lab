#include "xparameters.h"
#include "xiicps.h"
#include "xuartps.h"
#include "xil_printf.h"
#include "sleep.h"

#define I2C_DEVICE_ID   XPAR_XIICPS_0_DEVICE_ID
#define UART_DEVICE_ID  XPAR_XUARTPS_1_DEVICE_ID
#define MPU6050_ADDR    0x68
#define WHO_AM_I_REG    0x75

XIicPs Iic;
XUartPs Uart;

int main() {
    int Status;
    XIicPs_Config *IicConfig;
    XUartPs_Config *UartConfig;
    u8 write_buf[1], read_buf[1];

    // Initialize UART1
    UartConfig = XUartPs_LookupConfig(UART_DEVICE_ID);
    XUartPs_CfgInitialize(&Uart, UartConfig, UartConfig->BaseAddress);
    XUartPs_SetBaudRate(&Uart, 115200);

    xil_printf("Starting MPU6050 I2C Test...\r\n");

    // Initialize I2C0
    IicConfig = XIicPs_LookupConfig(I2C_DEVICE_ID);
    XIicPs_CfgInitialize(&Iic, IicConfig, IicConfig->BaseAddress);
    XIicPs_SetSClk(&Iic, 100000);  // 100 kHz

    while (1) {
        write_buf[0] = WHO_AM_I_REG;

        Status = XIicPs_MasterSendPolled(&Iic, write_buf, 1, MPU6050_ADDR);
        while (XIicPs_BusIsBusy(&Iic));
        if (Status != XST_SUCCESS) {
            xil_printf("I2C write failed\r\n");
            sleep(5);
            continue;
        }

        Status = XIicPs_MasterRecvPolled(&Iic, read_buf, 1, MPU6050_ADDR);
        while (XIicPs_BusIsBusy(&Iic));
        if (Status != XST_SUCCESS) {
            xil_printf("I2C read failed\r\n");
            sleep(5);
            continue;
        }

        xil_printf("WHO_AM_I = 0x%02X\r\n", read_buf[0]);

        sleep(5); // Delay 5 seconds
    }

    return 0;
}
